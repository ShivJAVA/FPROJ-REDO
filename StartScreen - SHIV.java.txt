package GPACK;


import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.*;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.File;
import java.util.concurrent.TimeUnit;

import java.io.File;






public class StartScreen extends JFrame {
	private JButton startB;
	private JPanel startP;
	private JLabel rImage;
	
	public StartScreen() throws UnsupportedAudioFileException, IOException, LineUnavailableException, InterruptedException {
		
		initialize();
		//playMusic();
		
		
	}
	
	public void initialize() throws UnsupportedAudioFileException, IOException, LineUnavailableException, InterruptedException {
		
		
		// NECESSRY FRAME STUFF
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // || When the red button is clicked, window closes ||
		setLocationRelativeTo(null); // || Sets the window to appear on center of the screen ||
		setLayout(new BorderLayout()); // || Sets Layout to BorderLayout ||
		pack(); // || I don't know what this does ||
		//
		
		//MY FRAME STUFF
		setResizable(true); // || User can't resize the frame ||
		setTitle("Start Screen");  // || Sets the title of FRAME ||
		 setSize(1000, 900); // || Size Preference ||
		setVisible(true); // || Makes frame visible ||
		//
		
		
		
		
		//PANEL & IMAGELABEL
		startP = new JPanel();
		startP.setLayout(new BorderLayout());
		add(startP, BorderLayout.CENTER);
		
		ImageIcon background=new ImageIcon("G-FIGHTERF_1000x900.jpg");
	    Image img=background.getImage();
	    Image temp=img.getScaledInstance(1000,800,Image.SCALE_SMOOTH);
	    background= new ImageIcon(temp);
	    rImage = new JLabel(background);
	    rImage.setLayout(new GridBagLayout() );
	    rImage.setBounds(0,0,1000,900);
	    startP.add(rImage);
	    //
	    
	    
	    
	    
	    // START BUTTON
	    JButton startB = new JButton("START");
	    startB.setForeground(Color.BLACK);
	    startB.setBackground(Color.BLACK);
	    startB.setOpaque(true);
	    startB.setPreferredSize(new Dimension(400, 100));
	    startB.setFont(new Font("Sabo", Font.BOLD, 80));
	    
	    // 
	    
	    

	     // Add Button to imageLabel
	    rImage.add(startB, new GridBagConstraints());
	    setVisible(true);
	    //
	    
	    
	    startB.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				getContentPane().removeAll(); // || Removes all components ||
				repaint(); // || repaints Frame to be blank ||
				
				
				// New Panel
				JPanel nameGameP = new JPanel();
				nameGameP.setLayout(null);
				nameGameP.setBackground(Color.BLACK);
				add(nameGameP);
			
				
				// DONE BUTTON
				JButton startB2 = new JButton("DONE");
			    startB2.setForeground(Color.BLACK);
			    startB2.setBackground(Color.WHITE);
			    startB2.setFont(new Font("Sabo", Font.BOLD, 40));
			    startB2.setBounds(30, 680, 300, 90);
			    nameGameP.add(startB2);
			    //
			    
			    
			    
			    
			    
			     // EVERYTHING YOU WANT TO ADD SHOULD BE ABOVE THIS!!!!!!!!!
			    
				ImageIcon background1=new ImageIcon("SelectionImage.jpg");
				Image img=background1.getImage();
				Image temp=img.getScaledInstance(1000,900,Image.SCALE_SMOOTH);
				background1= new ImageIcon(temp);
				JLabel rImage1 = new JLabel(background1);
				rImage1.setLayout(null);
				rImage1.setBounds(0,0,1000,900);
				nameGameP.add(rImage1);
				 
				 
				  // NECESSARY _ DO NOT REMOVE
				 setVisible(true);	
			}
	    	
	    	
	    });
	    
	    
	    
	
		
	}
	
	public static void playMusic() throws InterruptedException, UnsupportedAudioFileException, IOException, LineUnavailableException {
		TimeUnit.SECONDS.sleep(0);
		File file = new File("8BIT.wav");
		AudioInputStream audiostream =  AudioSystem.getAudioInputStream(file);
		Clip clip = AudioSystem.getClip();
		clip.open(audiostream);
		
		clip.start();
	}
}
